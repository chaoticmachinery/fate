[default]
fls=/usr/local/bin/fls
#Set the default timezone for the plugins
timezone=UTC
#Where the image is mounted to
drive=partition
mactime=/appl/ir/forensic-automated-tool-environment/mactime
filebin=/usr/bin/file
findbin=/usr/bin/find
grepbin=/usr/bin/grep
cutbin=/usr/bin/cut
sortbin=/usr/bin/sort
uniqbin=/usr/bin/uniq
sedbin=/usr/bin/sed
fgrepbin=/usr/bin/fgrep
awkbin=/usr/bin/awk

[fls]
savedir=fls
thread=n

[rdpbmc]
bmctool=/appl/rdp_bmc/bmc-tools.py
savedir=rdpbmc
bmcopts=-o

[log2timeline]
savedir=log2timeline
timescanner=/appl/log2timelineperl/log2timeline_0.65/timescanner
# Fastprocess is either n or y (lowercase)
# no = Process all the files it can find; should take 30 min to 2 hours; recommended
# yes = Process under either win7 or winxp per log2timeline; take 4 min to 30 min.
fastprocess=n
#Parse::Win32Registry is needed to determin OS type for log2timeline
regfind=/usr/local/bin/regfind.pl
thread=n

[plaso_log2timeline]
savedir=plaso_log2timeline
thread=n
#log2timeline=/appl/plaso/plaso-20221229/tools/log2timeline.py
log2timeline=/appl/plaso/plaso-20220930/tools/log2timeline.py
#log2timeline=/usr/bin/log2timeline.py
plaso_opts=--partition all -z UTC --status_view linear --storage_file 
#--partition all -z UTC --status_view linear  --single_process --storage_file
#--process_archives   --partition all --zone UTC --status_view linear  --disable_zeromq
plaso_savefile=l2tl_bodyfile.plaso
#workercnt -- If postive use that many works; if negative subtract that many workers from total available cpu/cores
workercnt=-3
#/usr/local/bin/psort.py  --output_format dynamic --output_time_zone UTC  --write ./l2tl_bodyfile.csv ./l2tl_bodyfile.plaso
#psortcmd=/appl/plaso/plaso-20221229/tools/psort.py
psortcmd=/appl/plaso/plaso-20220930/tools/psort.py
psort_opts=--output_format dynamic --output_time_zone UTC 
psort_log=--logfile


[regripper]
#regprocess plugin
#regripper=/appl/regripper2.8/RegRipper2.8-master/rip.pl
#regripperplugins=/appl/regripper2.8/RegRipper2.8-master/plugins/
regripper=/appl/regripper3.0/RegRipper3.0/rip.pl
regripperplugins=/appl/regripper3.0/RegRipper3.0/plugins/
regripperxp=/appl/regrip/ripxp.pl
regtime=/appl/regrip/regtime.pl
regtime2=/usr/local/bin/regtimeline.pl -v 
#If you wish to use Harlan C.'s regp.pl uncommment the line below and comment out the lien below it.
#regdump.pl comes from Parse::Win32Registry. Normally, it gets installed at /usr/local/bin. 
#Either one will give you the same information. regdump.pl will give slightly more information if
#it is configured to do so.
#regdump=/appl/regripper/regp.pl
regdump=/usr/local/bin/regdump.pl -r -v 
#Regscan comes from Parse::Win32Registry
#It is possible to subsitute regscan with regslack.pl included with regripper
regscan=/usr/local/bin/regscan.pl -u 
savedir=registry
shimcacheparser=/appl/malware/ShimCacheParser/ShimCacheParser.py
#TZWorks Example
#shellbagsparser=/appl/shellbags/sbag64 -csv -inc_slack  
#Mr. William Ballenthin Shellbags Parser Example
shellbagsparser=/appl/shellbags/shellbags-master/shellbags.py -o csv 
amcacheparser=/appl/python-registry/python-registry/samples/amcache.py
#Regripper amcache parser to use
amcacheparserreg=amcache_tln
recentfileparser=/appl/recentfilecache/rfc.pl
parse=/appl/ir.work/parse.pl -c 
thread=n
maxthread=2
#Copy file 1=yes 0=no
copyfile=0
#Symlink file 1=yes 0=no
symlinkfile=0


[sample]
savedir=sample
thread=n

[analyzemft]
savedir=analyzemft
analyzemft=/appl/analyzemft/analyzeMFT/analyzeMFT.py
#SAVEDIR will be replaced with the abs path to the savedir directory
options=-o SAVEDIR/OUTFILE -a 
#-b SAVEDIR/BODYFILE --bodyfull -c SAVEDIR/CSVFILE
thread=y
maxthread=15

[tardetails]
savedir=tardetails
tardetails=/appl/ir.work/plugins.working/tardetails_v0.2.1.py
processfile=ir.tar.gz
#Wildcardprocessfile y/n = If y, match files that have a partial match to text in processfile. If n, then files must 100% match processfile.
wildcardprocessfile=n
options=--sha1 --extract
#thread=y
maxthread=15

#Win10
[bitsadmin]
savedir=bitsadmin_win10
bitsparser=/appl/BitsParser/BitsParser.py
#SAVEDIR will be replaced with the abs path to the savedir directory
options=--carveall --input INPUT --output OUTPUT 
thread=y
maxthread=15

[bitsadmin_oldos]
savedir=bitsadmin_oldos
bitsparser=/usr/local/bin/bits_parser
#SAVEDIR will be replaced with the abs path to the savedir directory
options=-o OUTPUT INPUT
thread=y
maxthread=15

[prefetch]
thread=y
savedir=prefetch
savefilename=prefetch.csv
maxthread=15
prefetchparser=/appl/ir.work/plugins.working/w10pf_parser_v0.2.py 
#Some files might have INPUT in the file name which will result in bad file names and no output
# <INPUT> <OUTPUT> are hard coded keywords that the perl script looks for 
options=--volumes -f <INPUT> -o <OUTPUT>


[rdpevtx]
thread=y
savedir=rdpevtx
savefilename=rdpevtx.csv
maxthread=15
evtxparser=/appl/ir.work/plugins.working/rdp_evtx_parser_v0.2.1.py

[pwrshellevtx]
thread=y
savedir=pwrshellevtx
savefilename=pwrshellevtx.csv
maxthread=15
options=
evtxparser=/appl/ir.work/plugins.working/pwrshell_evtx_parser_v0.2a.py

#ntfs_linker --output ./ntfslinker --ntfs-dir ./files2 --extra
[ntfslinker]
savedir=ntfslinker
ntfslinkerbin=/usr/local/bin/ntfs_linker
#SAVEDIR will be replaced with the abs path to the savedir directory
options=--extra --output OUTFILE --ntfs-dir OUTFILE
#Use symbolic links vs coping files.
links=0
thread=n

[jobparse]
savedir=jobparse
thread=n
#Jamie Levy's Job parser
jobparser=/appl/jobparser/jobparser.py


[setup_api_log]
savedir=setup_api_log
thread=n

[strings_pagefile]
savedir=strings_pagefile
strings=/usr/bin/strings
ascii_options=-t x
unicode_options=-t x -e l
thread=n

[MFT]
savedir=mft
thread=n

[dllcache]
savedir=dllcache
thread=n

[wmi]
savedir=wmi
consumerbindings=/appl2/wmi/wmi_consumerbindings_csv_v0.2.py
consumerbindings_opts=--path DIR --type win7 --out OUTFILE
maxthread=15

[clamav]
savedir=clamav
clamscanoptions=--stdout -r --cross-fs=no --infected --algorithmic-detection=yes --scan-pe=yes --scan-elf=yes --scan-html=yes --scan-ole2=yes --scan-pdf=yes --scan-archive=yes --block-encrypted=yes --bytecode=yes --bytecode-unsigned=yes
thread=n

[getfiles]
savedir=getfiles

[yara]
savedir=yarascan
yarabin=/usr/local/bin/yara
yarasig=/export/yara/consolidate_rules.yara /export/yara/ClamAv_10-18-13.yara

[hashsearch]
savedir=hashsearch
hashlist=/appl/ir.work/hashlist.txt
maxfilesize=74883970
patternsplit=,
hashsavefile=hashes.csv

[MassTriage]
savedir=masstriage
nsrl=/appl/nsrl/nsrl.py
nsrlopts=--hash=SHA-1 --notfoundonly
nsrldb=/appl/nsrl/NSRLFile.txt.zip
ir_file_distil=/appl2/ir_distill/ir_distil_v0.6.1.py
#ir_file_distil_nsrl=--nsrl /appl2/ir_distill/nsrl.db
#ir_file_distil_nsrl=--nsrl /appl2/ir_distill/nsrl_052422/nsrl.v3.2022.03.01.db /appl2/ir_distill/nsrl_052422/nsrl_legacy.db /appl2/ir_distill/nsrl_052422/nsrl_ios.v3.2022.03.01.db /appl2/ir_distill/nsrl_052422/nsrl_android.v3.2022.03.01.db /appl2/ir_distill/nsrl_052422/nsrl_android.v3.2022.03.01.db /appl2/ir_distill/nsrl_052422/nsrl_ios_legacy_v2.73.1.db
ir_file_distil_nsrl=--nsrl /appl2/ir_distill/nsrl_052422/
#ir_file_distil_nsrl3=--nsrl /appl2/nsrl3/modern_full/RDS_2023.06.1_modern_minimal/
ir_file_distil_nsrl3=--nsrl /mnt/flash2/nsrl/
#ir_file_distil_filecheck=--filecheck /appl2/ir_distill/os.3.sqlite
ir_file_distil_filecheck=--filecheck /appl/vanillawindowsreference/VanillaWindowsReference/os.09202022.sqlite
ir_file_distil_reviewlist=--reviewlist
ir_file_distil_malwarelist=--malwarelist /appl2/ir_distill/malware_bazaar/malware_bazaar.db
ir_file_distil_malwarelist3=--malwarelist /appl2/ir_distill/malware_bazaar/malware_bazaar_02092024/malware_02092024b.db
ir_file_distil_opt=--showallmatches --ignorecase
mlr_opt=--fs '|'
#mlr_opt=
wbamcache=/appl/amcache/amcache.py
#regrip=/appl/regripper2.8/RegRipper2.8/rip.pl
regrip=/appl/regripper3.0/RegRipper3.0/rip.pl
regrip_amcache_plugin=amcache_tlnkm
regrip_shimcache_plugin=appcompatcache_tln
